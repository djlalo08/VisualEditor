Root
    Map[name:quicksort, import_from:./irs/quicksort, returnidx:0, hide_outs:t]
        Ins
            Map[name:ls, prefix:t, returnidx:0, hide_outs:t, variableinput:t]
                Ins
                    Constant[name:5, value:5, className:constant, type:Number, unwrap:t]
                    Constant[name:4, value:4, className:constant, type:Number, unwrap:t]
                    Constant[name:2, value:2, className:constant, type:Number, unwrap:t]
                    Constant[name:8, value:8, className:constant, type:Number, unwrap:t]
                    Constant[name:6, value:6, className:constant, type:Number, unwrap:t]
                Outs
                    Node
        Outs
            Node

    MapDef[name:quicksort]
        Ins
        Outs
        Body
            Map[name:if]
                Ins
                    //cond
                    Map[name:l1, returnidx:0, hide_outs:t, prefix:t]
                        Ins
                            InBound[name:a, getvalue:u1, className:unbound, bind_idx:0]
                        Outs
                            Node
                    //then
                    InBound[name:a, getvalue:u1, className:unbound, bind_idx:0]
                    
                    //else
                    Vertical
                        Map[name:spl, prefix:t, inline:t]
                            Ins
                                InBound[name:a, getvalue:u1, className:unbound, bind_idx:0]
                            Outs
                                Variable[name:h, setvalue:h, className:setvariable]
                                Variable[name:t, setvalue:t, className:setvariable]
                        Map[name:++, infix:t, returnidx:0, hide_outs:t, inline:t]
                            Ins
                                Map[name:quicksort, returnidx:0, hide_outs:t, prefix:t, import_from:./irs/quicksort, inline:t, className:inline]
                                    Ins
                                        Map[name:filter, returnidx:0, hide_outs:t, inline:t, className:inline, className:inline]
                                            Ins
                                                Variable[name:t, getvalue:t, className:getvariable]
                                                Map[name:<, infix:t, variableinput:t, hide_outs:t, returnidx:0, inline:t]
                                                    Ins
                                                        UnBound[className:unbound, name:x, getvalue:x]
                                                        Variable[name:h, getvalue:h, className:getvariable]
                                                    Outs
                                                        Node
                                            Outs
                                                Node
                                    Outs
                                        Node
                                Variable[name:h, getvalue:h, className:getvariable]
                                Map[name:quicksort, returnidx:0, hide_outs:t, prefix:t, import_from:./irs/quicksort, inline:t, className:inline]
                                    Ins
                                        Map[name:filter, returnidx:0, hide_outs:t, inline:t, className:inline]
                                            Ins
                                                Variable[name:t, getvalue:t, className:getvariable]
                                                Map[name:>, infix:t, variableinput:t, hide_outs:t, returnidx:0, inline:t, className:inline]
                                                    Ins
                                                        UnBound[className:unbound, name:x, getvalue:x]
                                                        Variable[name:h, getvalue:h, className:getvariable]
                                                    Outs
                                                        Node
                                            Outs
                                                Node
                                    Outs
                                        Node
                            Outs
                                Node
                Outs
                    Node[name:b, return:0, className:unbound]
